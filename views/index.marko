<!doctype html>
<html>

<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>System Information</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO"
    crossorigin="anonymous">
  <link rel="stylesheet" href="/assets/style.css">
</head>

<body>
  <div class="container" id="app">
    <nav class="navbar navbar-dark bg-dark rounded shadow-sm mb-3">
      <a class="navbar-brand" href="/">
        <img src="/assets/logo.svg" width="30" height="30" alt="logo" class="mr-1">
        System Information
      </a>
    </nav>

    <div class="row justify-content-center mb-3">

      <div class="col-12 col-lg-6 mb-3">
        <div class="card text-white shadow-sm">
          <h6 class="card-header">System Vital</h6>
          <div class="card-body">
            <div class="table-responsive">
              <table class="table table-hover table-sm">
                <tbody>
                  <tr>
                    <td>Canonical Hostname</td>
                    <td>${input.staticData.os.hostname}</td>
                  </tr>
                  <tr>
                    <td>Listening IP</td>
                    <td>${input.listeningIp}</td>
                  </tr>
                  <tr>
                    <td>Kernel Version</td>
                    <td>${input.staticData.versions.kernel}</td>
                  </tr>
                  <tr>
                    <td>Distro Name</td>
                    <td>${input.staticData.os.distro}</td>
                  </tr>
                  <tr>
                    <td>Uptime</td>
                    <td>${input.time.prettyUptime}</td>
                  </tr>
                  <tr>
                    <td>Average load</td>
                    <td>
                      <div class="float-left">
                        ${input.avgload[0].toFixed(2)} ${input.avgload[1].toFixed(2)} ${input.avgload[2].toFixed(2)}
                      </div>
                      <div class="float-right" style="width:50%;">
                        <div class="progress">
                          <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: ${input.currentLoad.avgload}%;"
                            aria-valuenow="${input.currentLoad.avgload}" aria-valuemin="0" aria-valuemax="100"></div>
                        </div>
                        <div class="text-center">${input.currentLoad.avgload}%</div>
                      </div>
                    </td>
                  </tr>
                  <tr>
                    <td>System Language</td>
                    <td>${input.locale}</td>
                  </tr>
                  <tr>
                    <td>Local time</td>
                    <td>${input.time.prettyCurrent}</td>
                  </tr>
                  <tr>
                    <td>Time zone</td>
                    <td>${input.time.timezone}</td>
                  </tr>
                  <tr>
                    <td>Time zone name</td>
                    <td>${input.time.timezoneName}</td>
                  </tr>
                  <tr>
                    <td>Processes</td>
                    <td>${input.processes.all} (${input.processes.running} running, ${input.processes.sleeping}
                      sleeping, ${input.processes.blocked} blocked, ${input.processes.unknown} unknown)</td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>

      <div class="col-12 col-lg-6 mb-3">
        <div class="card text-white shadow-sm">
          <h6 class="card-header">CPU Usage</h6>
          <div class="card-body">
            <div class="table-responsive">
              <table class="table table-hover table-sm">
                <thead>
                  <th scope="col">Core</th>
                  <th scope="col" style="width:60%;">Load</th>
                  <th scope="col">Speed</th>
                  <th scope="col">Temp</th>
                </thead>
                <tbody>
                  <for(core in input.currentLoad.cpus | status-var=loop)>
                    <tr>
                      <td>Core ${loop.getIndex()}</td>
                      <td>
                        <div class="progress">
                          <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: ${core.load}%;"></div>
                        </div>
                        <div class="text-center">${core.load.toFixed(2)}%</div>
                      </td>
                      <td>${input.cpuCurrentspeed.cores[loop.getIndex()]} Ghz</td>
                      <td>${input.cpuTemp.cores[loop.getIndex()]}</td>
                    </tr>
                    </for>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>

      <div class="col-12 mb-3">
        <div class="card text-white shadow-sm">
          <h6 class="card-header">Memory Usage</h6>
          <div class="card-body">
            <div class="table-responsive">
              <table class="table table-hover table-sm">
                <thead>
                  <tr>
                    <th scope="col">Type</th>
                    <th scope="col" style="width:50%;">Usage</th>
                    <th scope="col">Free</th>
                    <th scope="col">Used</th>
                    <th scope="col">Total</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td>Physical</td>
                    <td>
                      <div class="progress">
                        <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: ${input.memoryUsage.active/input.memoryUsage.total*100}%;"></div>
                        <div class="progress-bar bg-warning progress-bar-striped progress-bar-animated" role="progressbar"
                          style="width: ${input.memoryUsage.buffcache/input.memoryUsage.total*100}%;"></div>
                      </div>
                      <div class="text-center">${(input.memoryUsage.used/input.memoryUsage.total*100).toFixed(2)}%
                        (active: ${(input.memoryUsage.active/input.memoryUsage.total*100).toFixed(2)}%, buffcache:
                        ${(input.memoryUsage.buffcache/input.memoryUsage.total*100).toFixed(2)}%)</div>
                    </td>
                    <td>${(input.memoryUsage.free/1024/1024/1024).toFixed(2)} GB</td>
                    <td>${(input.memoryUsage.used/1024/1024/1024).toFixed(2)} GB</td>
                    <td>${(input.memoryUsage.total/1024/1024/1024).toFixed(2)} GB</td>
                  </tr>
                  <tr>
                    <td>SWAP</td>
                    <td>
                      <div class="progress">
                        <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: ${input.memoryUsage.swapused/input.memoryUsage.swaptotal*100}%;"></div>
                      </div>
                      <div class="text-center">${(input.memoryUsage.swapused/input.memoryUsage.swaptotal*100).toFixed(2)}%</div>
                    </td>
                    <td>${(input.memoryUsage.swapfree/1024/1024/1024).toFixed(2)} GB</td>
                    <td>${(input.memoryUsage.swapused/1024/1024/1024).toFixed(2)} GB</td>
                    <td>${(input.memoryUsage.swaptotal/1024/1024/1024).toFixed(2)} GB</td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>

      <div class="col-12 mb-3">
        <div class="card text-white shadow-sm">
          <h6 class="card-header">Storage Usage</h6>
          <div class="card-body">
            <div class="table-responsive">
              <table class="table table-hover table-sm">
                <thead>
                  <tr>
                    <th scope="col">Mount</th>
                    <th scope="col">Type</th>
                    <th scope="col">Fs</th>
                    <th scope="col" style="width:50%">Usage</th>
                    <th scope="col">Free</th>
                    <th scope="col">Used</th>
                    <th scope="col">Total</th>
                  </tr>
                </thead>
                <tbody>
                  <for(storage in input.fsSize)>
                    <tr>
                      <td>${storage.mount}</td>
                      <td>${storage.type}</td>
                      <td>${storage.fs}</td>
                      <td>
                        <div class="progress">
                          <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: ${storage.used/storage.size*100}%;"></div>
                        </div>
                        <div class="text-center">${(storage.used/storage.size*100).toFixed(2)}%</div>
                      </td>
                      <td>${storage.prettyFree}</td>
                      <td>${storage.prettyUsed}</td>
                      <td>${storage.prettySize}</td>
                    </tr>
                    </for>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>

      <div class="col-12 mb-3">
        <div class="card text-white shadow-sm">
          <h6 class="card-header">Network Usage</h6>
          <div class="card-body">
            <div class="table-responsive">
              <table class="table table-hover table-sm">
                <thead>
                  <tr>
                    <th scope="col">Interface</th>
                    <th scope="col">Ipv4</th>
                    <th scope="col">Ipv6</th>
                    <th scope="col">Mac</th>
                    <th scope="col">Operstate</th>
                    <th scope="col">Receive</th>
                    <th scope="col">Sent</th>
                    <th scope="col">Ms</th>
                  </tr>
                </thead>
                <tbody>
                  <for(network in input.networkInterfaces)>
                    <tr>
                      <td>${network.iface}</td>
                      <td>${network.ip4}</td>
                      <td>${network.ip6}</td>
                      <td>${network.mac}</td>
                      <td>${network.stats.operstate}</td>
                      <td>
                        <div>${network.stats.prettyRx}</div>
                        <div>(${network.stats.prettyRxSec}/s)</div>
                      </td>
                      <td>
                        <div>${network.stats.prettyTx}</div>
                        <div>(${network.stats.prettyTxSec}/s)</div>
                      </td>
                      <td>${network.stats.prettyMs}</td>
                    </tr>
                    </for>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>

    </div>

    <hr>

    <div class="row justify-content-center">
      <div class="col-12">
        <div class="card-columns">

          <div class="card text-white shadow-sm">
            <h6 class="card-header">Operating system</h6>
            <div class="card-body">
              <div class="table-responsive">
                <table class="table table-hover table-sm">
                  <tbody>
                    <tr>
                      <td>Platform</td>
                      <td>${input.staticData.os.platform}</td>
                    </tr>
                    <tr>
                      <td>Distro</td>
                      <td>${input.staticData.os.distro}</td>
                    </tr>
                    <tr>
                      <td>Release</td>
                      <td>${input.staticData.os.release}</td>
                    </tr>
                    <tr>
                      <td>Codename</td>
                      <td>${input.staticData.os.codename}</td>
                    </tr>
                    <tr>
                      <td>Kernel</td>
                      <td>${input.staticData.os.kernel}</td>
                    </tr>
                    <tr>
                      <td>Arch</td>
                      <td>${input.staticData.os.arch}</td>
                    </tr>
                    <tr>
                      <td>Hostname</td>
                      <td>${input.staticData.os.hostname}</td>
                    </tr>
                    <tr>
                      <td>Logofile</td>
                      <td>${input.staticData.os.logofile}</td>
                    </tr>
                  </tbody>
                </table>
              </div>
            </div>
          </div>

          <div class="card text-white shadow-sm">
            <h6 class="card-header">System</h6>
            <div class="card-body">
              <div class="table-responsive">
                <table class="table table-hover table-sm">
                  <tbody>
                    <tr>
                      <td>Manufacturer</td>
                      <td>${input.staticData.system.manufacturer}</td>
                    </tr>
                    <tr>
                      <td>Model</td>
                      <td>${input.staticData.system.model}</td>
                    </tr>
                    <tr>
                      <td>Version</td>
                      <td>${input.staticData.system.version}</td>
                    </tr>
                    <tr>
                      <td>Serial</td>
                      <td>${input.staticData.system.serial}</td>
                    </tr>
                    <tr>
                      <td>UUID</td>
                      <td>${input.staticData.system.uuid}</td>
                    </tr>
                    <tr>
                      <td>SKU</td>
                      <td>${input.staticData.system.sku}</td>
                    </tr>
                  </tbody>
                </table>
              </div>
            </div>
          </div>

          <div class="card text-white shadow-sm">
            <h6 class="card-header">Baseboard</h6>
            <div class="card-body">
              <div class="table-responsive">
                <table class="table table-hover table-sm">
                  <tbody>
                    <tr>
                      <td>Manufacturer</td>
                      <td>${input.staticData.baseboard.manufacturer}</td>
                    </tr>
                    <tr>
                      <td>Model</td>
                      <td>${input.staticData.baseboard.model}</td>
                    </tr>
                    <tr>
                      <td>Version</td>
                      <td>${input.staticData.baseboard.version}</td>
                    </tr>
                    <tr>
                      <td>Serial</td>
                      <td>${input.staticData.baseboard.serial}</td>
                    </tr>
                    <tr>
                      <td>AssetTag</td>
                      <td>${input.staticData.baseboard.assetTag}</td>
                    </tr>
                  </tbody>
                </table>
              </div>
            </div>
          </div>

          <div class="card text-white shadow-sm">
            <h6 class="card-header">Bios</h6>
            <div class="card-body">
              <div class="table-responsive">
                <table class="table table-hover table-sm">
                  <tbody>
                    <tr>
                      <td>Vendor</td>
                      <td>${input.staticData.bios.vendor}</td>
                    </tr>
                    <tr>
                      <td>Version</td>
                      <td>${input.staticData.bios.version}</td>
                    </tr>
                    <tr>
                      <td>ReleaseDate</td>
                      <td>${input.staticData.bios.releaseDate}</td>
                    </tr>
                    <tr>
                      <td>Revision</td>
                      <td>${input.staticData.bios.revision}</td>
                    </tr>
                  </tbody>
                </table>
              </div>
            </div>
          </div>

          <div class="card text-white shadow-sm">
            <h6 class="card-header">CPU</h6>
            <div class="card-body">
              <div class="table-responsive">
                <table class="table table-hover table-sm">
                  <tbody>
                    <tr>
                      <td>Manufacturer</td>
                      <td>${input.staticData.cpu.manufacturer}</td>
                    </tr>
                    <tr>
                      <td>Brand</td>
                      <td>${input.staticData.cpu.brand}</td>
                    </tr>
                    <tr>
                      <td>Vendor</td>
                      <td>${input.staticData.cpu.vendor}</td>
                    </tr>
                    <tr>
                      <td>Family</td>
                      <td>${input.staticData.cpu.family}</td>
                    </tr>
                    <tr>
                      <td>Model</td>
                      <td>${input.staticData.cpu.model}</td>
                    </tr>
                    <tr>
                      <td>Stepping</td>
                      <td>${input.staticData.cpu.stepping}</td>
                    </tr>
                    <tr>
                      <td>Revision</td>
                      <td>${input.staticData.cpu.revision}</td>
                    </tr>
                    <tr>
                      <td>Voltage</td>
                      <td>${input.staticData.cpu.voltage}</td>
                    </tr>
                    <tr>
                      <td>Speed</td>
                      <td>${input.staticData.cpu.speed} Ghz</td>
                    </tr>
                    <tr>
                      <td>Speedmin</td>
                      <td>${input.staticData.cpu.speedmin} Ghz</td>
                    </tr>
                    <tr>
                      <td>Speedmax</td>
                      <td>${input.staticData.cpu.speedmax} Ghz</td>
                    </tr>
                    <tr>
                      <td>Cores</td>
                      <td>${input.staticData.cpu.cores}</td>
                    </tr>
                    <tr>
                      <td>Cache</td>
                      <td>
                        <table class="table table-hover table-sm">
                          <tbody>
                            <tr>
                              <td>L1D</td>
                              <td>${(input.staticData.cpu.cache.l1d/1024/1024).toFixed(2)} MB</td>
                            </tr>
                            <tr>
                              <td>L1I</td>
                              <td>${(input.staticData.cpu.cache.l1i/1024/1024).toFixed(2)} MB</td>
                            </tr>
                            <tr>
                              <td>L2</td>
                              <td>${(input.staticData.cpu.cache.l2/1024/1024).toFixed(2)} MB</td>
                            </tr>
                            <tr>
                              <td>L3</td>
                              <td>${(input.staticData.cpu.cache.l3/1024/1024).toFixed(2)} MB</td>
                            </tr>
                          </tbody>
                        </table>
                      </td>
                    </tr>
                    <tr>
                      <td>flags</td>
                      <td>${input.staticData.cpu.flags}</td>
                    </tr>
                  </tbody>
                </table>
              </div>
            </div>
          </div>


          <div class="card text-white shadow-sm">
            <h6 class="card-header">GPU</h6>
            <div class="card-body">
              <div class="table-responsive">
                <table class="table table-hover table-sm">
                  <tbody>
                    <for(gpu in input.staticData.graphics.controllers | status-var=loop)>
                      <tr>
                        <td>
                          ${loop.getIndex()+1}
                        </td>
                        <td>
                          <table class="table table-hover table-sm">
                            <tbody>
                              <tr>
                                <td>Model</td>
                                <td>${gpu.model}</td>
                              </tr>
                              <tr>
                                <td>Vendor</td>
                                <td>${gpu.vendor}</td>
                              </tr>
                              <tr>
                                <td>Bus</td>
                                <td>${gpu.bus}</td>
                              </tr>
                              <tr>
                                <td>Vram</td>
                                <td>${gpu.vram} MB</td>
                              </tr>
                              <tr>
                                <td>VramDynamic</td>
                                <td>${gpu.vramDynamic}</td>
                              </tr>
                            </tbody>
                          </table>
                        </td>
                      </tr>
                      </for>
                  </tbody>
                </table>
              </div>
            </div>
          </div>

          <div class="card text-white shadow-sm">
            <h6 class="card-header">Display</h6>
            <div class="card-body">
              <div class="table-responsive">
                <table class="table table-hover table-sm">
                  <tbody>
                    <for(display in input.staticData.graphics.displays | status-var=loop)>
                      <tr>
                        <td>
                          ${loop.getIndex()+1}
                        </td>
                        <td>
                          <table class="table table-hover table-sm">
                            <tbody>
                              <tr>
                                <td>Model</td>
                                <td>${display.model}</td>
                              </tr>
                              <tr>
                                <td>main</td>
                                <td>${display.main}</td>
                              </tr>
                              <tr>
                                <td>builtin</td>
                                <td>${display.builtin}</td>
                              </tr>
                              <tr>
                                <td>connection</td>
                                <td>${display.connection}</td>
                              </tr>
                              <tr>
                                <td>resolutionx</td>
                                <td>${display.resolutionx}</td>
                              </tr>
                              <tr>
                                <td>resolutiony</td>
                                <td>${display.resolutiony}</td>
                              </tr>
                              <tr>
                                <td>sizex</td>
                                <td>${display.sizex}</td>
                              </tr>
                              <tr>
                                <td>sizey</td>
                                <td>${display.sizey}</td>
                              </tr>
                              <tr>
                                <td>pixeldepth</td>
                                <td>${display.pixeldepth}</td>
                              </tr>
                            </tbody>
                          </table>
                        </td>
                      </tr>
                      </for>
                  </tbody>
                </table>
              </div>
            </div>
          </div>

          <div class="card text-white shadow-sm">
            <h6 class="card-header">memLayout</h6>
            <div class="card-body">
              <div class="table-responsive">
                <table class="table table-hover table-sm">
                  <tbody>
                    <for(mem in input.staticData.memLayout | status-var=loop)>
                      <tr>
                        <td>
                          ${loop.getIndex()+1}
                        </td>
                        <td>
                          <table class="table table-hover table-sm">
                            <tbody>
                              <tr>
                                <td>size</td>
                                <td>${(mem.size/1024/1024/1024).toFixed(2)} GB</td>
                              </tr>
                              <tr>
                                <td>bank</td>
                                <td>${mem.bank}</td>
                              </tr>
                              <tr>
                                <td>type</td>
                                <td>${mem.type}</td>
                              </tr>
                              <tr>
                                <td>clockSpeed</td>
                                <td>${mem.clockSpeed}</td>
                              </tr>
                              <tr>
                                <td>formFactor</td>
                                <td>${mem.formFactor}</td>
                              </tr>
                              <tr>
                                <td>manufacturer</td>
                                <td>${mem.manufacturer}</td>
                              </tr>
                              <tr>
                                <td>partNum</td>
                                <td>${mem.partNum}</td>
                              </tr>
                              <tr>
                                <td>serialNum</td>
                                <td>${mem.serialNum}</td>
                              </tr>
                              <tr>
                                <td>voltageConfigured</td>
                                <td>${mem.voltageConfigured}</td>
                              </tr>
                              <tr>
                                <td>voltageMin</td>
                                <td>${mem.voltageMin}</td>
                              </tr>
                              <tr>
                                <td>voltageMax</td>
                                <td>${mem.voltageMax}</td>
                              </tr>
                            </tbody>
                          </table>
                        </td>
                      </tr>
                      </for>
                  </tbody>
                </table>
              </div>
            </div>
          </div>

          <div class="card text-white shadow-sm">
            <h6 class="card-header">diskLayout</h6>
            <div class="card-body">
              <div class="table-responsive">
                <table class="table table-hover table-sm">
                  <tbody>
                    <for(disk in input.staticData.diskLayout | status-var=loop)>
                      <tr>
                        <td>
                          ${loop.getIndex()+1}
                        </td>
                        <td>
                          <table class="table table-hover table-sm">
                            <tbody>
                              <tr>
                                <td>type</td>
                                <td>${disk.type}</td>
                              </tr>
                              <tr>
                                <td>name</td>
                                <td>${disk.name}</td>
                              </tr>
                              <tr>
                                <td>vendor</td>
                                <td>${disk.vendor}</td>
                              </tr>
                              <tr>
                                <td>size</td>
                                <td>${(disk.size/1024/1024/1024).toFixed(2)} GB</td>
                              </tr>
                              <tr>
                                <td>bytesPerSector</td>
                                <td>${disk.bytesPerSector}</td>
                              </tr>
                              <tr>
                                <td>totalCylinders</td>
                                <td>${disk.totalCylinders}</td>
                              </tr>
                              <tr>
                                <td>totalHeads</td>
                                <td>${disk.totalHeads}</td>
                              </tr>
                              <tr>
                                <td>totalSectors</td>
                                <td>${disk.totalSectors}</td>
                              </tr>
                              <tr>
                                <td>totalTracks</td>
                                <td>${disk.totalTracks}</td>
                              </tr>
                              <tr>
                                <td>tracksPerCylinder</td>
                                <td>${disk.tracksPerCylinder}</td>
                              </tr>
                              <tr>
                                <td>sectorsPerTrack</td>
                                <td>${disk.sectorsPerTrack}</td>
                              </tr>
                              <tr>
                                <td>firmwareRevision</td>
                                <td>${disk.firmwareRevision}</td>
                              </tr>
                              <tr>
                                <td>serialNum</td>
                                <td>${disk.serialNum}</td>
                              </tr>
                              <tr>
                                <td>interfaceType</td>
                                <td>${disk.interfaceType}</td>
                              </tr>
                              <tr>
                                <td>smartStatus</td>
                                <td>${disk.smartStatus}</td>
                              </tr>
                            </tbody>
                          </table>
                        </td>
                      </tr>
                      </for>
                  </tbody>
                </table>
              </div>
            </div>
          </div>

          <div class="card text-white shadow-sm">
            <h6 class="card-header">Versions</h6>
            <div class="card-body">
              <div class="table-responsive">
                <table class="table table-hover table-sm">
                  <tbody>
                    <tr>
                      <td>kernel</td>
                      <td>${input.staticData.versions.kernel}</td>
                    </tr>
                    <tr>
                      <td>openssl</td>
                      <td>${input.staticData.versions.openssl}</td>
                    </tr>
                    <tr>
                      <td>node</td>
                      <td>${input.staticData.versions.node}</td>
                    </tr>
                    <tr>
                      <td>v8</td>
                      <td>${input.staticData.versions.v8}</td>
                    </tr>
                    <tr>
                      <td>npm</td>
                      <td>${input.staticData.versions.npm}</td>
                    </tr>
                    <tr>
                      <td>yarn</td>
                      <td>${input.staticData.versions.yarn}</td>
                    </tr>
                    <tr>
                      <td>pm2</td>
                      <td>${input.staticData.versions.pm2}</td>
                    </tr>
                    <tr>
                      <td>gulp</td>
                      <td>${input.staticData.versions.gulp}</td>
                    </tr>
                    <tr>
                      <td>grunt</td>
                      <td>${input.staticData.versions.grunt}</td>
                    </tr>
                    <tr>
                      <td>git</td>
                      <td>${input.staticData.versions.git}</td>
                    </tr>
                    <tr>
                      <td>tsc</td>
                      <td>${input.staticData.versions.tsc}</td>
                    </tr>
                    <tr>
                      <td>mysql</td>
                      <td>${input.staticData.versions.mysql}</td>
                    </tr>
                    <tr>
                      <td>redis</td>
                      <td>${input.staticData.versions.redis}</td>
                    </tr>
                    <tr>
                      <td>mongodb</td>
                      <td>${input.staticData.versions.mongodb}</td>
                    </tr>
                    <tr>
                      <td>nginx</td>
                      <td>${input.staticData.versions.nginx}</td>
                    </tr>
                    <tr>
                      <td>php</td>
                      <td>${input.staticData.versions.php}</td>
                    </tr>
                  </tbody>
                </table>
              </div>
            </div>
          </div>

        </div>
      </div>
    </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
    crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49"
    crossorigin="anonymous"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy"
    crossorigin="anonymous"></script>
</body>

</html>